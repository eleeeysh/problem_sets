knitr::opts_chunk$set(echo=TRUE, warning=FALSE, message=FALSE)
options(stringsAsFactors = FALSE)
install.packages("haven")
install.packages("readxl")
library(tidyverse) # for data munging
library(knitr) # for kable table formating
library(haven) # import and export 'SPSS', 'Stata' and 'SAS' Files
library(readxl) # import excel files
# #optional packages:
# library(lsr)
# library(ggthemes)
install.packages("lsr")
install.packages("ggthemes")
# Just Study 1
d <- read_excel ("data/S1_Subway.xlsx")
head(d)
View(d)
?anova
aov(formula = DISTANCE ~ DIRECTION*STN_NUMBER, data = d)
mod <- lm(formula = DISTANCE ~ DIRECTION*STN_NUMBER, data = d)
anova(mod)
is.factor(d)
is.factor(d$DIRECTION)
d = d %>%
mutate(
DIRECTION = as.factor(DIRECTION),
STN_NUMBER = as.factor(STN_NUMBER),
STN_NAME = as.factor(STN_NAME)
)
mod <- lm(formula = DISTANCE ~ DIRECTION*STN_NUMBER, data = d)
anova(mod)
View(d)
summary(mod)
mod <- lm(formula = DISTANCE ~ DIRECTION*STN_NUMBER, data = d)
anova(mod)
mod <- lm(formula = DISTANCE ~ DIRECTION*STN_NUMBER, data = d)
anova(mod)
mod <- lm(formula = DISTANCE ~ DIRECTION*STN_NUMBER, data = d)
anova(mod)
knitr::opts_chunk$set(echo=TRUE, warning=FALSE, message=FALSE)
options(stringsAsFactors = FALSE)
library(tidyverse) # for data munging
library(knitr) # for kable table formating
library(haven) # import and export 'SPSS', 'Stata' and 'SAS' Files
library(readxl) # import excel files
# optional packages:
# library(lsr)
# library(ggthemes)
# Just Study 1
d <- read_excel ("data/S1_Subway.xlsx")
d = d %>%
mutate(
DIRECTION = as.factor(DIRECTION),
STN_NUMBER = as.factor(STN_NUMBER),
STN_NAME = as.factor(STN_NAME)
)
mod <- lm(formula = DISTANCE ~ DIRECTION*STN_NAME, data = d)
anova(mod)
# reproduce the interaction between orientation and station
mod_no_int <- lm(formula = DISTANCE ~ DIRECTION + STN_NAME, data = d)
anova(mod, mod_no_int)
# reproduce the main effect of orientation
anova(mod_no_int, mod_no_ori)
mod_no_ori <- lm(formula = DISTANCE ~ STN_NAME, data = d)
# reproduce the main effect of orientation
anova(mod_no_int, mod_no_ori)
mod_no_stn <- lm(formula = DISTANCE ~ DIRECTION, data = d)
# reproduce the main effect of station
anova(mod_no_int, mod_no_stn)
mod <- aov(formula = DISTANCE ~ DIRECTION*STN_NAME, data = d)
summary(mod)
summary(mod)
?aov
mod <- lm(formula = DISTANCE ~ DIRECTION*STN_NAME, data = d)
summary(mod)
anova(mod)
?anova
anova(mod, type = "III")
anova(mod, type = 3)
mod <- lm(formula = DISTANCE ~ STN_NAME*DIRECTION, data = d)
anova(mod)
mod <- lm(formula = DISTANCE ~ DIRECTION*STN_NUMBER, data = d)
anova(mod)
Anova(mod, type = 3)
?Anova
??Anova
?anova
mod <- lm(formula = DISTANCE ~ DIRECTION*STN_NAME, data = d, type = 3)
?lm
# Just Study 1
d <- read_excel ("data/S1_Subway.xlsx")
head(d)
d = d %>%
mutate(
DIRECTION = as.factor(DIRECTION),
STN_NUMBER = as.factor(STN_NUMBER),
STN_NAME = as.factor(STN_NAME)
)
mod <- lm(formula = DISTANCE ~ DIRECTION*STN_NAME, data = d)
anova(mod)
# optional packages:
library(lsr)
lsr(mod)
etaSquared(mod)
mod_dir = lm(DISTANCE ~ DIRECTION, data = d)
mod_stn = lm(DISTANCE ~ STN_NAME, data = d)
anova(mod_no_int, mod_dir)
mod_no_int <- lm(DISTANCE ~ DIRECTION + STN_NAME, data = d)
anova(mod_no_int, mod_dir)
mod_dir = lm(DISTANCE ~ DIRECTION + STN_NAME:DIRECTION, data = d)
anova(mod_no_int, mod_dir)
anova(mod_no_int, mod_dir)
anova(mod, mod_dir)
anova(mod, mod_no_int)
install.packages("car")
library(car)
Anova(mod, type = 3)
mod <- lm(formula = DISTANCE ~ DIRECTION*STN_NAME, data = d)
Anova(mod, type = 3)
anova(mod)
mod <- lm(formula = DISTANCE ~ DIRECTION*STN_NAME, data = d)
anova(mod)
etaSquared(mod)
anova(mod)
knitr::opts_chunk$set(echo=TRUE, warning=FALSE, message=FALSE)
options(stringsAsFactors = FALSE)
library(tidyverse) # for data munging
library(knitr) # for kable table formating
library(haven) # import and export 'SPSS', 'Stata' and 'SAS' Files
library(readxl) # import excel files
library(lsr)
library(ggthemes)
# Just Study 1
d <- read_excel ("data/S1_Subway.xlsx")
mod <- aov(data = d,
formula = DISTANCE ~ DIRECTION*STN_NAME)
summary(mod)
etaSquared(mod)
summary(mod)
# reproduce the main effect of orientation
summary(mod)[1]
knitr::opts_chunk$set(echo=TRUE, warning=FALSE, message=FALSE)
options(stringsAsFactors = FALSE)
library(tidyverse) # for data munging
library(knitr) # for kable table formating
library(haven) # import and export 'SPSS', 'Stata' and 'SAS' Files
library(readxl) # import excel files
library(lsr)
library(ggthemes)
# Just Study 1
d <- read_excel ("data/S1_Subway.xlsx")
d = d %>%
mutate(
DIRECTION = as.factor(DIRECTION),
STN_NUMBER = as.factor(STN_NUMBER),
STN_NAME = as.factor(STN_NAME)
)
d %>%
group_by(DIRECTION, STN_NAME) %>%
summarize(
num_obs = n(),
.groups = "keep"
) %>%
ungroup()
mod <- aov(data = d,
formula = DISTANCE ~ DIRECTION*STN_NAME)
summary(mod)
etaSquared(mod)
anova(mod)
d = d %>%
mutate(
DIRECTION = as.factor(DIRECTION),
STN_NUMBER = as.factor(STN_NUMBER),
STN_NAME = factor(levels = c("SPAD", "STG", "B-Y", "SHER"))
)
d = d %>%
mutate(
DIRECTION = as.factor(DIRECTION),
STN_NUMBER = as.factor(STN_NUMBER),
STN_NAME = factor(STN_NAME, levels = c("SPAD", "STG", "B-Y", "SHER"))
)
d %>%
group_by(DIRECTION, STN_NAME) %>%
summarize(
num_obs = n(),
.groups = "keep"
) %>%
ungroup()
mod <- aov(data = d,
formula = DISTANCE ~ DIRECTION*STN_NAME)
anova(mod)
# reproduce results for St. George
st.george = d %>%
filter(STN_NAME == "STG")
st.george.aov = aov(data = st.george, DISTANCE ~ DIRECTION)
summary(st.george.aov)
etaSquared(st.george.aov)
st.george %>%
group_by(DIRECTION) %>%
summarise(Mean = mean(DISTANCE))
View(d)
# was the estimated distance to St. George greater for eastbound or westbound travellers?
# no stats needed, just get the mean estimated distance between east and west directions
st.george %>%
group_by(DIRECTION) %>%
summarise(Mean = mean(DISTANCE))
## do the same for Spadina
spadina = d %>%
filter(STN_NAME == "SPAD")
spad.aov = aov(data = spadina, DISTANCE ~ DIRECTION)
summary(spad.aov)
summary(mod)
anova(mod)
summary(mod)
etaSquared(spad.aov)
## do the same for Bloor-Yonge
by= d %>%
filter(STN_NAME == "B-Y")
by.aov = aov(data = by, DISTANCE ~ DIRECTION)
summary(by.aov)
by %>%
group_by(DIRECTION) %>%
summarise(Mean = mean(DISTANCE))
etaSquared(by.aov)
## do the same for Sherbourne
sher= d %>%
filter(STN_NAME == "SHER")
sher.aov = aov(data = sher, DISTANCE ~ DIRECTION)
summary(sher.aov)
sher %>%
group_by(DIRECTION) %>%
summarise(Mean = mean(DISTANCE))
etaSquared(sher.aov)
summary(by.aov)
d_plt %>%
group_by(STN_NAME, DIRECTION) %>%
summarise(mean_distance=mean(DISTANCE),
sd_distance=sd(DISTANCE),
n=n(),
y_min=mean_distance-qnorm(0.975)*sd_distance/sqrt(n),
y_max=mean_distance+qnorm(0.975)*sd_distance/sqrt(n))
d_plt = d %>%
group_by(STN_NAME, DIRECTION) %>%
summarise(mean_distance=mean(DISTANCE),
sd_distance=sd(DISTANCE),
n=n(),
y_min=mean_distance-qnorm(0.975)*sd_distance/sqrt(n),
y_max=mean_distance+qnorm(0.975)*sd_distance/sqrt(n))
d_plt %>%
ggplot(aes(x=STN_NAME, y=mean_distance, col=DIRECTION)) +
geom_point() +
geom_errorbar(aes(ymin=y_min, ymax=y_max), width=0.05) +
geom_path(aes(group=DIRECTION)) +
ylab("Subjective Distance") +
xlab("Station") +
ylim(0, 5) +
theme_classic() +
ggtitle("Reproducing Fig1") +
theme(plot.title = element_text(hjust = 0.5))
